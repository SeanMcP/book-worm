{"version":3,"sources":["components/Emoji.tsx","utils/TimeUtil.ts","components/Speed.tsx","components/Rating.tsx","components/Time.tsx","components/GenreIcon.tsx","components/Title.tsx","constants/theme.ts","components/Book.tsx","components/BookList.tsx","components/Footer.tsx","components/Header.tsx","components/Stats.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["Emoji","props","react_default","a","createElement","aria-hidden","label","aria-label","className","concat","role","title","emoji","differenceInDays","start","end","startDate","dayjs","endDate","diff","Speed","days","pages","components_Emoji","Math","floor","Rating","rating","i","push","key","Time","number","format","GenreIcon","fantasy","nonfiction","religion","genre","Title","components_GenreIcon","author","theme","StyledLi","styled","li","_templateObject","THEME","isComplete","Book","length","components_Title","components_Time","Fragment","components_Rating","components_Speed","StyledUl","ul","BookList_templateObject","BookList","books","map","book","components_Book","Object","assign","StyledFooter","footer","Footer_templateObject","Footer","href","StyledHeader","header","Header_templateObject","Header","Stats_templateObject","getMostPopular","sortedObject","mostPopular","highestCount","count","findMostPopular","sortedObj","forEach","hasOwnProperty","getBookPopularityByKey","Stats","mostAuthor","completed","mostGenre","Stats_StyledLi","slice","indexOf","capitalize","StyledBody","div","App_templateObject","StyledWrapper","_templateObject2","StyledBumper","_templateObject3","App","state","_this2","this","fetch","then","raw","json","res","setState","filter","components_Header","components_BookList","components_Stats","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81534c3d.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface PropsInt {\n    className?: string;\n    emoji: string;\n    label?: string;\n}\n\nconst Emoji = (props: PropsInt) => {\n    return (\n        <span\n            aria-hidden={props.label ? \"false\" : \"true\"}\n            aria-label={props.label ? props.label : \"\"}\n            className={`Emoji ${props.className ? props.className : \"\"}`}\n            role=\"img\"\n            title={props.label ? props.label : \"\"}\n        >\n            {props.emoji}\n        </span>\n    );\n};\n\nexport default Emoji;\n","import dayjs from \"dayjs\";\n\nexport function differenceInDays(start: string, end?: string) {\n    const startDate = dayjs(start);\n    const endDate = dayjs(end);\n    if (end) {\n        return endDate.diff(startDate, \"day\");\n    }\n    return dayjs().diff(startDate, \"day\");\n}\n","import React from 'react';\n\nimport Emoji from './Emoji';\n\nimport { differenceInDays } from \"../utils/TimeUtil\";\n\ninterface SpeedProps {\n    endDate: string;\n    pages: number;\n    startDate: string;\n}\n\nconst Speed = (props: SpeedProps) => {\n    const days = differenceInDays(props.startDate, props.endDate);\n    if (props.pages) {\n        return (\n            <section>\n                <Emoji emoji={'⏱'}/>Speed: {Math.floor(props.pages / days)} pages/day\n            </section>\n        );\n    }\n    return null;\n};\n\nexport default Speed;","import React from \"react\";\n\nimport Emoji from \"./Emoji\";\n\ninterface RatingInt {\n    rating: number;\n}\n\nconst Rating = (props: RatingInt) => {\n    const rating = [];\n    for (let i = 0; i < props.rating; i++) {\n        rating.push(<Emoji emoji={\"⭐️\"} key={`star-${i}`} label={\"star\"} />);\n    }\n    return <section>\n        <Emoji emoji={'🏅'} />\n        Rating: {rating}\n    </section>;\n};\n\nexport default Rating;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\n\nimport Emoji from './Emoji';\n\nimport { differenceInDays } from \"../utils/TimeUtil\";\n\nfunction formatDays(number: number) {\n    if (number === 0) {\n        return `today`;\n    } else if (number === 1) {\n        return `${number} day`;\n    }\n    return `${number} days`;\n}\n\nexport interface TimeInt {\n    startDate: string;\n    endDate: string;\n}\n\nconst Time = (props: TimeInt) => {\n    const { endDate, startDate } = props;\n    const days = differenceInDays(startDate, endDate);\n    return (\n        <section>\n            <Emoji emoji={'🗓'} />\n            {endDate ? \"Finshed\" : \"Started\"}{\": \"}\n            {dayjs(startDate).format(\"ddd. M/D\")} ({formatDays(days)}\n            {!endDate && \" ago\"})\n        </section>\n    );\n};\n\nexport default Time;\n","import React from \"react\";\n\nimport Emoji from \"./Emoji\";\n\ninterface PropsInt {\n    genre: string;\n}\n\ninterface genreEmojiInt {\n    [key: string]: string;\n}\n\nconst GenreIcon = (props: PropsInt) => {\n    const genreEmoji: genreEmojiInt = {\n        fantasy: \"🐉\",\n        nonfiction: \"📰\",\n        religion: \"🙏\"\n    };\n    const emoji = genreEmoji[props.genre] || \"📕\";\n    return <Emoji className={\"GenreIcon\"} emoji={emoji} label={props.genre} />;\n};\n\nexport default GenreIcon;\n","import React from 'react';\n\nimport GenreIcon from \"./GenreIcon\";\n\ninterface TitleProps {\n    author: string;\n    genre: string;\n    title: string;\n}\n\nconst Title = (props: TitleProps) => {\n    return (\n        <span>\n            <GenreIcon genre={props.genre} />\n            <em>{props.title}</em> by {props.author}\n        </span>\n    );\n};\n\nexport default Title;","export default {\n    BACKGROUND: '#18191A',\n    BORDER_CONTENT: '#676C6E',\n    CONTENT: '#404344',\n    FOOTER: '#111213',\n    TEXT: '#EEF9FF',\n    TEXT_FAINT: '#A7AEB2'\n}\n\n// #EEF9FF\n// #EBF6FB\n// #E5EFF5\n// #DCE6EB\n// #CFD8DD\n// #BDC6CB\n// #A7AEB2\n// #8A9093\n// #676C6E\n// #404344\n// #18191A","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Speed from \"./Speed\";\nimport Rating from \"./Rating\";\nimport Time from \"./Time\";\nimport Title from \"./Title\";\n\nimport THEME from \"../constants/theme\";\n\nexport interface BookInt {\n    title: string;\n    author: string;\n    startDate: string;\n    endDate: string;\n    genre: string;\n    comments: string;\n    rating: number;\n    pages: number;\n}\n\ninterface StyledLiInt {\n    isComplete: boolean;\n}\n\nconst StyledLi = styled.li`\n    background: ${THEME.CONTENT};\n    border-radius: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    opacity: ${(props: StyledLiInt) => (props.isComplete ? 0.5 : 1)};\n    padding: 1rem;\n    transition: all 200ms ease-in-out;\n\n    :not(:last-of-type) {\n        margin-bottom: 1rem;\n    }\n\n    :hover {\n        box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.0125);\n        opacity: 1;\n        transform: scale(1.025);\n    }\n\n    main {\n        align-items: center;\n        border-bottom: 1px solid ${THEME.BORDER_CONTENT};\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 0.5rem;\n        padding-bottom: 0.5rem;\n    }\n\n    @media screen and (max-width: 532px) {\n        main {\n            align-items: flex-start;\n            flex-direction: column;\n        }\n    }\n`;\n\nconst Book = (props: BookInt) => {\n    const isComplete = props.endDate.length > 0;\n    return (\n        <StyledLi isComplete={isComplete}>\n            <main>\n                <Title\n                    author={props.author}\n                    genre={props.genre}\n                    title={props.title}\n                />\n            </main>\n            <footer>\n                <Time endDate={props.endDate} startDate={props.startDate} />\n                {isComplete && (\n                    <React.Fragment>\n                        <Rating rating={props.rating} />\n                        <Speed\n                            endDate={props.endDate}\n                            startDate={props.startDate}\n                            pages={props.pages}\n                        />\n                    </React.Fragment>\n                )}\n            </footer>\n        </StyledLi>\n    );\n};\n\nexport default Book;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Book, { BookInt } from \"./Book\";\n\ninterface Props {\n    books: Array<BookInt>;\n}\n\nconst StyledUl = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nconst BookList = (props: Props) => {\n    return (\n        <StyledUl>\n            {props.books.map((book, i) => (\n                <Book key={i} {...book} />\n            ))}\n        </StyledUl>\n    );\n};\n\nexport default BookList;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport THEME from '../constants/theme';\n\nconst StyledFooter = styled.footer`\n    background: ${THEME.FOOTER};\n    color: ${THEME.TEXT_FAINT};\n    margin-top: 2rem;\n    padding: 1rem 0;\n    text-align: center;\n\n    a, a:visited {\n        color: dodgerblue;\n        text-decoration: none;\n    }\n\n    a:hover, a:active {\n        text-decoration: underline;\n    }\n`;\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            Made by <a href=\"https://seanmcp.com\">Sean McP</a>\n        </StyledFooter>\n    );\n};\n\nexport default Footer;","import React from \"react\";\n\nimport Emoji from \"./Emoji\";\nimport styled from \"@emotion/styled\";\n\nimport THEME from '../constants/theme';\n\nconst StyledHeader = styled.header`\n    border-bottom: ${THEME.CONTENT};\n    color: white;\n    margin-bottom: 1rem;\n    padding: 1rem 0;\n\n    > h1 {\n        margin-top: 0;\n    }\n\n    > p {\n        color: ${THEME.TEXT_FAINT};\n        margin-bottom: 0;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <StyledHeader>\n            <h1>\n                <Emoji emoji={\"🐛\"} /> Book Worm\n            </h1>\n            <p>A reading log for a notoriously inconsistent reader</p>\n        </StyledHeader>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { capitalize } from \"lodash\";\nimport styled from '@emotion/styled'\n\nimport GenreIcon from \"./GenreIcon\";\nimport { BookInt } from \"./Book\";\n\nimport THEME from '../constants/theme';\n\ninterface mostPopularInt {\n    [key: string]: number;\n}\n\nexport function findMostPopular(sortedObject: mostPopularInt) {\n    let mostPopular = \"\";\n    let highestCount = 0;\n    for (const key in sortedObject) {\n        const count = sortedObject[key];\n        if (count > highestCount) {\n            highestCount = count;\n            mostPopular = key;\n        }\n    }\n    return `${mostPopular} (${highestCount})`;\n}\n\nexport function getBookPopularityByKey(\n    books: Array<BookInt>,\n    key: keyof BookInt\n) {\n    const sortedObj: mostPopularInt = {};\n    books.forEach((book: BookInt) => {\n        if (sortedObj.hasOwnProperty(book[key])) {\n            sortedObj[book[key]]++;\n        } else {\n            sortedObj[book[key]] = 1;\n        }\n    });\n    return sortedObj;\n}\n\nconst StyledLi = styled.li`\n    color: ${THEME.TEXT_FAINT}\n`\n\ninterface MostInt {\n    completed: Array<BookInt>;\n}\n\nfunction getMostPopular(books: Array<BookInt>, key: keyof BookInt) {\n    return findMostPopular(getBookPopularityByKey(books, key));\n}\n\nconst Stats = (props: MostInt) => {\n    const mostAuthor = getMostPopular(props.completed, \"author\");\n    const mostGenre = getMostPopular(props.completed, \"genre\");\n    if (!props.completed.length) {\n        return null;\n    }\n    return (\n        <section>\n            <h2>Stats</h2>\n            <ul>\n                <StyledLi>Most read author: {mostAuthor}</StyledLi>\n                <StyledLi>\n                    Most read genre:{\" \"}\n                    <GenreIcon genre={mostGenre.slice(0, mostGenre.indexOf(\" \"))} />{\" \"}\n                    {capitalize(mostGenre)}\n                </StyledLi>\n            </ul>\n        </section>\n    );\n};\n\nexport default Stats;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport BookList from \"./BookList\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Stats from \"./Stats\";\n\nimport { BookInt } from './Book';\nimport THEME from '../constants/theme';\n\nconst StyledBody = styled.div`\n    background: ${THEME.BACKGROUND};\n    color: ${THEME.TEXT};\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    min-height: 100vh;\n    min-width: 100vw;\n    width: 100%;\n`;\n\nconst StyledWrapper = styled.div`\n    flex: 1;\n    margin: 0 auto;\n    max-width: 800px;\n    width: 100%;\n`;\n\nconst StyledBumper = styled.div`\n    margin: 1rem;\n`;\n\nclass App extends Component {\n    state = {\n        books: [],\n        completed: []\n    };\n    componentDidMount() {\n        fetch(\"./data/record.json\")\n            .then((raw) => raw.json())\n            .then((res) => {\n                this.setState({\n                    books: res,\n                    completed: res.filter((book: BookInt) => book.endDate)\n                });\n            });\n    }\n    render() {\n        return (\n            <StyledBody>\n                <StyledWrapper>\n                    <StyledBumper>\n                        <Header />\n                        <BookList books={this.state.books} />\n                        <Stats completed={this.state.completed} />\n                    </StyledBumper>\n                </StyledWrapper>\n                <Footer />\n            </StyledBody>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}